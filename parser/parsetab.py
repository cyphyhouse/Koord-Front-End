
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5348CE7BCFA7E43E5D8D18817D50F3DD'
    
_lr_action_items = {'LID':([19,25,26,33,40,41,43,47,48,49,54,66,75,78,79,87,89,93,94,97,115,116,117,118,120,123,124,127,128,129,130,142,146,151,158,159,160,161,162,163,164,165,166,167,171,184,196,197,198,203,206,209,],[-81,32,-41,32,-38,63,-36,-35,-37,-39,63,-61,63,63,63,-58,-54,63,63,-14,63,-40,-55,-56,63,63,63,63,63,63,63,63,63,63,63,63,63,-76,-77,-79,-75,-78,-80,63,-62,63,-44,63,-57,63,63,-60,]),'DEDENT':([28,30,37,39,42,45,51,52,53,55,59,60,61,66,73,75,77,80,83,87,88,89,90,93,117,118,119,126,132,152,153,154,155,171,176,177,184,186,187,188,192,193,198,201,203,205,206,207,208,209,],[-81,-81,-81,62,-16,67,71,72,-81,-22,-81,-15,-19,-61,-21,-81,97,-17,110,-58,116,-54,-53,-81,-55,-56,-52,-18,-81,174,175,-81,-23,-62,186,187,-81,-9,-8,-24,195,196,-57,-46,-81,207,-81,-45,209,-60,]),'CID':([3,12,66,75,87,89,93,117,118,171,184,197,198,203,206,209,],[8,17,-61,86,-58,-54,86,-55,-56,-62,86,86,-57,86,86,-60,]),'ALLREAD':([9,62,67,],[14,-11,-10,]),'RPAR':([63,98,99,100,101,103,104,105,115,122,123,135,136,137,138,139,144,147,148,149,150,168,170,179,180,181,182,183,189,190,191,],[-74,-71,-67,-73,-70,-72,-69,-68,-81,-51,-81,157,-31,-29,-28,-30,170,-66,-63,-64,-65,183,-27,-32,189,190,191,-50,-47,-48,-49,]),'MINUS':([63,98,99,100,101,102,103,104,105,122,136,141,145,147,148,149,150,170,182,],[-74,-71,-67,-73,-70,130,-72,-69,-68,130,130,130,130,-66,-63,-64,-65,-27,130,]),'IPOS':([28,30,37,53,59,61,68,80,108,126,132,154,155,188,],[40,40,40,40,40,-19,40,-17,40,-18,40,40,-23,-24,]),'NEQ':([63,98,99,100,101,103,104,105,141,147,148,149,150,170,],[-74,-71,-67,-73,-70,-72,-69,-68,161,-66,-63,-64,-65,-27,]),'PRE':([96,],[125,]),'GEQ':([63,98,99,100,101,103,104,105,141,147,148,149,150,170,],[-74,-71,-67,-73,-70,-72,-69,-68,162,-66,-63,-64,-65,-27,]),'NL':([8,16,18,22,27,31,38,44,57,63,64,65,82,91,92,98,99,100,101,102,103,104,105,106,107,111,122,134,143,145,147,148,149,150,157,170,172,173,178,183,189,190,191,197,202,],[13,21,23,29,36,56,61,66,76,-74,-33,80,109,117,118,-71,-67,-73,-70,126,-72,-69,-68,-33,-34,133,-51,155,169,171,-66,-63,-64,-65,-59,-27,185,-20,188,-50,-47,-48,-49,200,204,]),'EQ':([63,98,99,100,101,103,104,105,141,147,148,149,150,170,],[-74,-71,-67,-73,-70,-72,-69,-68,164,-66,-63,-64,-65,-27,]),'LT':([46,63,98,99,100,101,103,104,105,141,147,148,149,150,170,],[68,-74,-71,-67,-73,-70,-72,-69,-68,166,-66,-63,-64,-65,-27,]),'AGENT':([0,],[3,]),'ASGN':([63,64,95,134,],[-74,78,124,156,]),'INIT':([19,97,],[24,-14,]),'FNUM':([78,94,115,120,123,124,127,128,129,130,142,146,156,158,159,160,161,162,163,164,165,166,167,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-76,-77,-79,-75,-78,-80,100,]),'COLON':([10,14,17,20,24,32,63,69,84,98,99,100,101,103,104,105,121,122,125,147,148,149,150,170,183,189,190,191,194,199,],[16,18,22,27,31,57,-74,82,111,-71,-67,-73,-70,-72,-69,-68,143,-51,146,-66,-63,-64,-65,-27,-50,-47,-48,-49,197,202,]),'EFF':([185,],[194,]),'COMMA':([40,43,47,48,49,63,64,81,98,99,100,101,103,104,105,106,136,147,148,149,150,170,],[-38,-36,-35,-37,-39,-74,79,108,-71,-67,-73,-70,-72,-69,-68,79,158,-66,-63,-64,-65,-27,]),'BY':([63,98,99,100,101,102,103,104,105,122,136,141,145,147,148,149,150,170,182,],[-74,-71,-67,-73,-70,127,-72,-69,-68,127,127,127,127,-66,127,-64,127,-27,127,]),'LPAR':([63,86,94,95,99,120,142,146,159,160,],[-74,115,120,123,123,120,120,120,120,120,]),'$end':([2,19,25,26,33,34,35,58,97,116,196,],[0,-81,-81,-41,-81,-1,-43,-42,-14,-40,-44,]),'PLUS':([63,98,99,100,101,102,103,104,105,122,136,141,145,147,148,149,150,170,182,],[-74,-71,-67,-73,-70,128,-72,-69,-68,128,128,128,128,-66,-63,-64,-65,-27,128,]),'GT':([40,43,47,48,49,63,98,99,100,101,103,104,105,131,141,147,148,149,150,170,],[-38,-36,-35,-37,-39,-74,-71,-67,-73,-70,-72,-69,-68,151,163,-66,-63,-64,-65,-27,]),'STRING':([28,30,37,53,59,61,68,80,108,126,132,154,155,188,],[43,43,43,43,43,-19,43,-17,43,-18,43,43,-23,-24,]),'ACTUATORS':([50,],[69,]),'MODULE':([6,],[12,]),'TIMES':([63,85,98,99,100,101,102,103,104,105,122,136,141,145,147,148,149,150,170,182,],[-74,114,-71,-67,-73,-70,129,-72,-69,-68,129,129,129,129,-66,129,-64,129,-27,129,]),'PASS':([28,30,66,75,87,89,93,117,118,132,154,171,184,197,198,203,206,209,],[44,44,-61,44,-58,-54,44,-55,-56,44,44,-62,44,44,-57,44,44,-60,]),'FALSE':([78,94,115,120,123,124,127,128,129,130,142,146,158,159,160,161,162,163,164,165,166,167,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-76,-77,-79,-75,-78,-80,104,]),'ELSE':([195,],[199,]),'LOCAL':([15,71,72,],[20,-12,-13,]),'SENSORS':([70,174,175,],[84,-7,-6,]),'TRUE':([78,94,115,120,123,124,127,128,129,130,142,146,158,159,160,161,162,163,164,165,166,167,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-76,-77,-79,-75,-78,-80,105,]),'IF':([66,75,87,89,93,117,118,171,184,197,198,203,206,209,],[-61,94,-58,-54,94,-55,-56,-62,94,94,-57,94,94,-60,]),'AND':([63,98,99,100,101,103,104,105,140,141,147,148,149,150,170,183,189,190,191,],[-74,-71,-67,-73,-70,-72,-69,-68,159,-51,-66,-63,-64,-65,-27,-50,-47,-48,-49,]),'MAP':([28,37,59,61,80,126,132,154,],[46,46,46,-19,-17,-18,46,46,]),'LBRACE':([63,74,],[-74,85,]),'INDENT':([21,23,29,36,56,76,109,133,169,200,204,],[28,30,50,59,75,96,132,154,184,203,206,]),'INT':([28,30,37,53,59,61,68,80,108,126,132,154,155,188,],[47,47,47,47,47,-19,47,-17,47,-18,47,47,-23,-24,]),'FLOAT':([28,30,37,53,59,61,68,80,108,126,132,154,155,188,],[48,48,48,48,48,-19,48,-17,48,-18,48,48,-23,-24,]),'RBRACE':([112,113,114,],[-26,134,-25,]),'LEQ':([63,98,99,100,101,103,104,105,141,147,148,149,150,170,],[-74,-71,-67,-73,-70,-72,-69,-68,165,-66,-63,-64,-65,-27,]),'BOOLEAN':([28,30,37,53,59,61,68,80,108,126,132,154,155,188,],[49,49,49,49,49,-19,49,-17,49,-18,49,49,-23,-24,]),'INUM':([78,85,94,115,120,123,124,127,128,129,130,142,146,156,158,159,160,161,162,163,164,165,166,167,],[103,112,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-76,-77,-79,-75,-78,-80,103,]),'NOT':([120,],[142,]),'USING':([1,5,13,110,],[6,6,-2,-5,]),'ALLWRITE':([1,4,5,7,11,13,110,],[-81,10,-81,-4,-3,-2,-5,]),'OR':([63,98,99,100,101,103,104,105,140,141,147,148,149,150,170,183,189,190,191,],[-74,-71,-67,-73,-70,-72,-69,-68,160,-51,-66,-63,-64,-65,-27,-50,-47,-48,-49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([28,37,59,132,154,],[37,37,37,37,37,]),'elseblock':([195,],[198,]),'module':([1,5,],[5,5,]),'owner':([85,],[113,]),'num':([78,94,115,120,123,124,127,128,129,130,142,146,156,158,159,160,167,],[101,101,101,101,101,101,101,101,101,101,101,101,178,101,101,101,101,]),'cond':([94,120,142,146,159,160,],[121,140,168,172,180,181,]),'mapdecl':([28,37,59,132,154,],[38,38,38,38,38,]),'pass':([28,30,75,93,132,154,184,197,203,206,],[39,52,87,87,152,176,87,87,87,87,]),'rvdecls':([30,53,],[51,73,]),'ardecls':([9,],[15,]),'event':([25,33,],[33,33,]),'rvdecl':([30,53,],[53,53,]),'varnames':([41,79,],[65,107,]),'stmts':([75,93,184,203,206,],[88,119,192,205,208,]),'locdecls':([15,],[19,]),'asgn':([75,93,184,197,203,206,],[89,89,89,89,89,89,]),'actuatordecls':([50,],[70,]),'init':([19,],[25,]),'program':([0,],[2,]),'awdecls':([4,],[9,]),'noargs':([115,123,],[137,137,]),'neargs':([115,123,158,],[138,138,179,]),'type':([28,30,37,53,59,68,108,132,154,],[41,54,41,54,41,81,131,41,41,]),'events':([25,33,],[34,58,]),'empty':([1,5,19,25,28,30,33,37,53,59,75,93,115,123,132,154,184,203,206,],[7,7,26,35,42,55,35,42,55,42,90,90,139,139,42,42,90,90,90,]),'effblock':([185,],[193,]),'exp':([78,94,115,120,123,124,127,128,129,130,142,146,158,159,160,167,],[102,122,136,141,136,145,147,148,149,150,122,122,136,122,122,182,]),'funccall':([75,78,93,94,115,120,123,124,127,128,129,130,142,146,158,159,160,167,184,197,203,206,],[91,98,91,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,91,91,91,91,]),'modulefunccall':([75,93,184,197,203,206,],[92,92,92,92,92,92,]),'args':([115,123,],[135,144,]),'stmt':([75,93,184,197,203,206,],[93,93,93,201,93,93,]),'agent':([0,],[1,]),'varname':([41,54,75,78,79,93,94,115,120,123,124,127,128,129,130,142,146,151,158,159,160,167,184,197,203,206,],[64,74,95,99,106,95,99,99,99,99,99,99,99,99,99,99,99,173,99,99,99,99,95,95,95,95,]),'modules':([1,5,],[4,11,]),'sensordecls':([70,],[83,]),'decls':([28,37,59,132,154,],[45,60,77,153,177,]),'op':([141,],[167,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> agent modules awdecls ardecls locdecls init events','program',7,'p_program','parser.py',10),
  ('agent -> AGENT CID NL','agent',3,'p_agent','parser.py',15),
  ('modules -> module modules','modules',2,'p_modules','parser.py',20),
  ('modules -> empty','modules',1,'p_modules','parser.py',21),
  ('module -> USING MODULE CID COLON NL INDENT actuatordecls sensordecls DEDENT','module',9,'p_module','parser.py',32),
  ('actuatordecls -> ACTUATORS COLON NL INDENT decls DEDENT','actuatordecls',6,'p_actuatordecls','parser.py',36),
  ('actuatordecls -> ACTUATORS COLON NL INDENT pass DEDENT','actuatordecls',6,'p_actuatordecls','parser.py',37),
  ('sensordecls -> SENSORS COLON NL INDENT decls DEDENT','sensordecls',6,'p_sensordecls','parser.py',44),
  ('sensordecls -> SENSORS COLON NL INDENT pass DEDENT','sensordecls',6,'p_sensordecls','parser.py',45),
  ('awdecls -> ALLWRITE COLON NL INDENT decls DEDENT','awdecls',6,'p_awdecls','parser.py',52),
  ('awdecls -> ALLWRITE COLON NL INDENT pass DEDENT','awdecls',6,'p_awdecls','parser.py',53),
  ('ardecls -> ALLREAD COLON NL INDENT rvdecls DEDENT','ardecls',6,'p_ardecls','parser.py',59),
  ('ardecls -> ALLREAD COLON NL INDENT pass DEDENT','ardecls',6,'p_ardecls','parser.py',60),
  ('locdecls -> LOCAL COLON NL INDENT decls DEDENT','locdecls',6,'p_locdecls','parser.py',66),
  ('decls -> decl decls','decls',2,'p_decls','parser.py',70),
  ('decls -> empty','decls',1,'p_decls','parser.py',71),
  ('decl -> type varnames NL','decl',3,'p_decl','parser.py',82),
  ('decl -> type varname ASGN exp NL','decl',5,'p_decl','parser.py',83),
  ('decl -> mapdecl NL','decl',2,'p_decl','parser.py',84),
  ('mapdecl -> MAP LT type COMMA type GT varname','mapdecl',7,'p_mapdecl','parser.py',101),
  ('rvdecls -> rvdecl rvdecls','rvdecls',2,'p_rvdecls','parser.py',115),
  ('rvdecls -> empty','rvdecls',1,'p_rvdecls','parser.py',116),
  ('rvdecl -> type varname LBRACE owner RBRACE NL','rvdecl',6,'p_rvdecl','parser.py',128),
  ('rvdecl -> type varname LBRACE owner RBRACE ASGN num NL','rvdecl',8,'p_rvdecl','parser.py',129),
  ('owner -> TIMES','owner',1,'p_owner','parser.py',139),
  ('owner -> INUM','owner',1,'p_owner','parser.py',140),
  ('funccall -> varname LPAR args RPAR','funccall',4,'p_funccall','parser.py',144),
  ('args -> neargs','args',1,'p_args','parser.py',148),
  ('args -> noargs','args',1,'p_args','parser.py',149),
  ('noargs -> empty','noargs',1,'p_noargs','parser.py',154),
  ('neargs -> exp','neargs',1,'p_neargs','parser.py',158),
  ('neargs -> exp COMMA neargs','neargs',3,'p_neargs','parser.py',159),
  ('varnames -> varname','varnames',1,'p_varnames','parser.py',170),
  ('varnames -> varname COMMA varnames','varnames',3,'p_varnames','parser.py',171),
  ('type -> INT','type',1,'p_type','parser.py',182),
  ('type -> STRING','type',1,'p_type','parser.py',183),
  ('type -> FLOAT','type',1,'p_type','parser.py',184),
  ('type -> IPOS','type',1,'p_type','parser.py',185),
  ('type -> BOOLEAN','type',1,'p_type','parser.py',186),
  ('init -> INIT COLON NL INDENT stmts DEDENT','init',6,'p_init','parser.py',192),
  ('init -> empty','init',1,'p_init','parser.py',193),
  ('events -> event events','events',2,'p_events','parser.py',201),
  ('events -> empty','events',1,'p_events','parser.py',202),
  ('event -> LID COLON NL INDENT PRE COLON cond NL effblock DEDENT','event',10,'p_event','parser.py',212),
  ('effblock -> EFF COLON NL INDENT stmts DEDENT','effblock',6,'p_effblock','parser.py',216),
  ('effblock -> EFF COLON stmt','effblock',3,'p_effblock','parser.py',217),
  ('cond -> LPAR cond AND cond RPAR','cond',5,'p_cond','parser.py',225),
  ('cond -> LPAR cond OR cond RPAR','cond',5,'p_cond','parser.py',226),
  ('cond -> LPAR exp op exp RPAR','cond',5,'p_cond','parser.py',227),
  ('cond -> LPAR NOT cond RPAR','cond',4,'p_cond','parser.py',228),
  ('cond -> exp','cond',1,'p_cond','parser.py',229),
  ('stmts -> stmt stmts','stmts',2,'p_stmts','parser.py',240),
  ('stmts -> empty','stmts',1,'p_stmts','parser.py',241),
  ('stmt -> asgn','stmt',1,'p_stmt','parser.py',251),
  ('stmt -> funccall NL','stmt',2,'p_stmt','parser.py',252),
  ('stmt -> modulefunccall NL','stmt',2,'p_stmt','parser.py',253),
  ('stmt -> IF cond COLON NL INDENT stmts DEDENT elseblock','stmt',8,'p_stmt','parser.py',254),
  ('stmt -> pass','stmt',1,'p_stmt','parser.py',255),
  ('modulefunccall -> CID LPAR args RPAR','modulefunccall',4,'p_modulefunccall','parser.py',263),
  ('elseblock -> ELSE COLON NL INDENT stmts DEDENT','elseblock',6,'p_elseblock','parser.py',267),
  ('pass -> PASS NL','pass',2,'p_pass','parser.py',271),
  ('asgn -> varname ASGN exp NL','asgn',4,'p_asgn','parser.py',275),
  ('exp -> exp PLUS exp','exp',3,'p_exp','parser.py',283),
  ('exp -> exp TIMES exp','exp',3,'p_exp','parser.py',284),
  ('exp -> exp MINUS exp','exp',3,'p_exp','parser.py',285),
  ('exp -> exp BY exp','exp',3,'p_exp','parser.py',286),
  ('exp -> varname','exp',1,'p_exp','parser.py',287),
  ('exp -> TRUE','exp',1,'p_exp','parser.py',288),
  ('exp -> FALSE','exp',1,'p_exp','parser.py',289),
  ('exp -> num','exp',1,'p_exp','parser.py',290),
  ('exp -> funccall','exp',1,'p_exp','parser.py',291),
  ('num -> INUM','num',1,'p_num','parser.py',300),
  ('num -> FNUM','num',1,'p_num','parser.py',301),
  ('varname -> LID','varname',1,'p_varname','parser.py',306),
  ('op -> EQ','op',1,'p_op','parser.py',314),
  ('op -> NEQ','op',1,'p_op','parser.py',315),
  ('op -> GEQ','op',1,'p_op','parser.py',316),
  ('op -> LEQ','op',1,'p_op','parser.py',317),
  ('op -> GT','op',1,'p_op','parser.py',318),
  ('op -> LT','op',1,'p_op','parser.py',319),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',324),
]
