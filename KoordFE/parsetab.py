
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '2C0AD86871F3FDB11CCDF171E28E1CDF'
    
_lr_action_items = {'LID':([2,5,6,8,9,10,11,13,16,17,21,23,27,28,35,36,40,41,42,43,44,45,46,52,56,58,63,68,79,85,88,90,92,111,118,119,123,124,125,127,132,133,135,136,138,139,140,141,146,147,148,149,151,154,155,176,180,183,187,188,189,190,191,192,193,194,195,196,197,200,210,213,218,221,222,223,224,226,230,233,236,],[-100,-100,-100,-9,-7,-8,-100,-16,-100,-18,-100,-20,-4,-100,55,-43,-37,-41,-36,-38,-39,-40,61,61,55,75,-15,-17,91,61,75,-19,91,-10,-56,-58,61,91,-68,-57,-3,91,91,91,91,91,91,91,-42,61,-59,-60,91,91,-63,91,91,91,61,-70,91,-96,-98,-97,-99,-95,-94,91,91,-67,61,-61,-71,-100,-46,61,-62,-66,61,61,-65,]),'DEDENT':([31,33,39,47,48,49,50,51,53,59,60,65,66,67,77,78,81,83,117,118,119,123,125,127,137,142,148,149,150,155,169,170,171,185,186,188,200,204,205,213,217,218,219,221,224,226,228,232,234,235,236,],[-100,-100,-100,63,-22,-100,-100,68,-26,-100,-21,-100,-12,-25,90,-24,111,-14,146,-56,-58,-55,-68,-57,-23,-100,-59,-60,-54,-63,185,-100,-27,-11,204,-70,-67,-13,213,-61,221,-71,222,-100,-62,-66,-48,234,-47,236,-65,]),'CID':([1,14,79,85,92,118,119,123,124,125,127,133,135,136,138,139,140,141,148,149,151,154,155,176,180,183,187,188,189,190,191,192,193,194,195,196,197,200,210,213,218,221,223,224,226,230,233,236,],[4,19,94,94,94,-56,-58,94,94,-68,-57,94,94,94,94,94,94,94,-59,-60,94,94,-63,94,94,94,94,-70,94,-96,-98,-97,-99,-95,-94,94,94,-67,94,-61,-71,-100,94,-62,-66,94,94,-65,]),'FNUM':([79,92,124,133,135,136,138,139,140,141,151,154,176,180,183,189,190,191,192,193,194,195,196,197,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-96,-98,-97,-99,-95,-94,95,95,]),'ALLREAD':([2,5,6,8,9,10,11,13,63,111,],[-100,-100,-100,-9,-7,-8,15,-16,-15,-10,]),'RPAR':([91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,134,135,136,153,158,159,160,161,162,163,164,165,166,167,168,175,181,182,184,198,201,203,206,207,208,209,214,215,216,],[-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,-89,158,-100,-100,-53,-86,-32,-31,-33,182,-34,184,-76,-73,-74,-75,158,-81,-64,-30,209,211,-35,214,215,216,-52,-49,-50,-51,]),'LCURLY':([37,],[58,]),'ATOMIC':([85,118,119,123,125,127,148,149,155,187,188,200,210,213,218,221,223,224,226,230,233,236,],[116,-56,-58,116,-68,-57,-59,-60,-63,116,-70,-67,116,-61,-71,-100,116,-62,-66,116,116,-65,]),'NULL':([79,92,124,133,135,136,138,139,140,141,151,154,176,180,183,189,190,191,192,193,194,195,196,197,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-96,-98,-97,-99,-95,-94,105,105,]),'TRUE':([79,92,124,133,135,136,138,139,140,141,151,154,176,180,183,189,190,191,192,193,194,195,196,197,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-96,-98,-97,-99,-95,-94,100,100,]),'IPOS':([31,33,39,50,59,78,137,142,170,171,],[44,44,44,44,44,-24,-23,44,44,-27,]),'DEF':([2,5,6,8,9,10,11,13,16,17,21,23,63,68,90,111,],[-100,-100,-100,-9,-7,-8,-100,-16,-100,-18,29,-20,-15,-17,-19,-10,]),'RBRACE':([91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,113,114,115,157,158,165,166,167,168,181,182,184,],[-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,-89,-28,-29,144,181,-86,-76,-73,-74,-75,-81,-64,-30,]),'PRE':([129,],[156,]),'GEQ':([91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,158,165,166,167,168,174,175,181,182,184,209,214,215,216,],[-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,-89,-86,-76,-73,-74,-75,190,-53,-81,-64,-30,-52,-49,-50,-51,]),'NL':([4,18,20,25,30,54,61,62,71,80,87,89,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,121,122,128,144,145,153,158,165,166,167,168,173,177,178,181,182,184,202,209,211,214,215,216,223,229,],[9,24,26,32,38,70,-92,78,86,110,130,132,-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,137,-89,143,148,149,155,171,172,-53,-86,-76,-73,-74,-75,188,199,200,-81,-64,-30,212,-52,218,-49,-50,-51,227,231,]),'RCURLY':([75,76,131,],[-6,89,-5,]),'EQ':([91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,158,165,166,167,168,174,175,181,182,184,209,214,215,216,],[-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,-89,-86,-76,-73,-74,-75,195,-53,-81,-64,-30,-52,-49,-50,-51,]),'PID':([79,92,124,133,135,136,138,139,140,141,151,154,176,180,183,189,190,191,192,193,194,195,196,197,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-96,-98,-97,-99,-95,-94,101,101,]),'LT':([91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,158,165,166,167,168,174,175,181,182,184,209,214,215,216,],[-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,-89,-86,-76,-73,-74,-75,193,-53,-81,-64,-30,-52,-49,-50,-51,]),'AGENT':([0,],[1,]),'ASGN':([61,62,120,126,],[-92,79,147,154,]),'INIT':([2,5,6,8,9,10,11,13,16,17,21,23,27,28,63,68,90,111,132,],[-100,-100,-100,-9,-7,-8,-100,-16,-100,-18,-100,-20,-4,34,-15,-17,-19,-10,-3,]),'NUM':([56,57,72,222,],[-45,74,-44,-46,]),'COLON':([12,15,19,22,34,55,64,82,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,116,152,153,156,158,165,166,167,168,181,182,184,209,214,215,216,220,225,],[18,20,25,30,54,71,80,112,-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,-89,145,177,-53,180,-86,-76,-73,-74,-75,-81,-64,-30,-52,-49,-50,-51,223,229,]),'COMMA':([75,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,158,163,165,166,167,168,181,182,184,],[88,-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,-89,-86,183,-76,-73,-74,-75,-81,-64,-30,]),'NEQ':([91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,158,165,166,167,168,174,175,181,182,184,209,214,215,216,],[-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,-89,-86,-76,-73,-74,-75,194,-53,-81,-64,-30,-52,-49,-50,-51,]),'BY':([91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,134,153,157,158,163,165,166,167,168,175,178,181,182,184,],[-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,138,-89,138,138,138,-86,138,-76,138,-74,138,138,138,-81,-64,-30,]),'LPAR':([61,79,91,92,94,107,124,126,133,135,136,138,139,140,141,151,154,176,179,180,183,189,190,191,192,193,194,195,196,197,],[-92,92,-92,92,135,136,151,136,92,92,92,92,92,92,92,151,92,151,201,151,92,151,-96,-98,-97,-99,-95,-94,151,151,]),'STAGE':([29,79,85,92,118,119,123,124,125,127,133,135,136,138,139,140,141,148,149,151,154,155,176,180,183,187,188,189,190,191,192,193,194,195,196,197,200,210,213,218,221,223,224,226,230,233,236,],[37,102,120,102,-56,-58,120,102,-68,-57,102,102,102,102,102,102,102,-59,-60,102,102,-63,102,102,102,120,-70,102,-96,-98,-97,-99,-95,-94,102,102,-67,120,-61,-71,-100,120,-62,-66,120,120,-65,]),'PLUS':([91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,134,153,157,158,163,165,166,167,168,175,178,181,182,184,],[-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,139,-89,139,139,139,-86,139,-76,-73,-74,-75,139,139,-81,-64,-30,]),'GT':([91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,158,165,166,167,168,174,175,181,182,184,209,214,215,216,],[-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,-89,-86,-76,-73,-74,-75,191,-53,-81,-64,-30,-52,-49,-50,-51,]),'STRING':([31,33,39,50,59,78,137,142,170,171,],[40,40,40,40,40,-24,-23,40,40,-27,]),'INPUTMAP':([31,33,39,50,59,78,137,142,170,171,],[41,41,41,41,41,-24,-23,41,41,-27,]),'ACTUATORS':([49,],[64,]),'MODULE':([7,],[14,]),'TIMES':([84,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,134,153,157,158,163,165,166,167,168,175,178,181,182,184,],[113,-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,140,-89,140,140,140,-86,140,-76,140,-74,140,140,140,-81,-64,-30,]),'GETINPUT':([154,],[179,]),'FALSE':([79,92,124,133,135,136,138,139,140,141,151,154,176,180,183,189,190,191,192,193,194,195,196,197,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-96,-98,-97,-99,-95,-94,106,106,]),'ELSE':([221,],[225,]),'LOCAL':([2,5,6,8,9,10,11,13,16,17,63,68,111,],[-100,-100,-100,-9,-7,-8,-100,-16,22,-18,-15,-17,-10,]),'SENSORS':([49,65,66,185,],[-100,82,-12,-11,]),'EFF':([212,],[220,]),'IF':([85,118,119,123,125,127,148,149,155,187,188,200,210,213,218,221,223,224,226,230,233,236,],[124,-56,-58,124,-68,-57,-59,-60,-63,124,-70,-67,124,-61,-71,-100,124,-62,-66,124,124,-65,]),'AND':([91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,158,165,166,167,168,174,175,181,182,184,209,214,215,216,],[-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,-89,-86,-76,-73,-74,-75,189,-53,-81,-64,-30,-52,-49,-50,-51,]),'LBRACE':([61,69,91,],[-92,84,133,]),'INDENT':([24,26,32,38,70,86,110,143,172,199,227,231,],[31,33,49,59,85,129,142,170,187,210,230,233,]),'INT':([31,33,39,50,59,78,137,142,170,171,],[42,42,42,42,42,-24,-23,42,42,-27,]),'FLOAT':([31,33,39,50,59,78,137,142,170,171,],[43,43,43,43,43,-24,-23,43,43,-27,]),'LEQ':([91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,158,165,166,167,168,174,175,181,182,184,209,214,215,216,],[-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,-89,-86,-76,-73,-74,-75,192,-53,-81,-64,-30,-52,-49,-50,-51,]),'BOOLEAN':([31,33,39,50,59,78,137,142,170,171,],[45,45,45,45,45,-24,-23,45,45,-27,]),'EXIT':([85,118,119,123,125,127,148,149,155,187,188,200,210,213,218,221,223,224,226,230,233,236,],[128,-56,-58,128,-68,-57,-59,-60,-63,128,-70,-67,128,-61,-71,-100,128,-62,-66,128,128,-65,]),'MINUS':([91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,134,153,157,158,163,165,166,167,168,175,178,181,182,184,],[-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,141,-89,141,141,141,-86,141,-76,-73,-74,-75,141,141,-81,-64,-30,]),'INUM':([74,79,84,92,124,133,135,136,138,139,140,141,151,154,176,180,183,189,190,191,192,193,194,195,196,197,],[87,109,114,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-96,-98,-97,-99,-95,-94,109,109,]),'NOT':([151,],[176,]),'USING':([2,5,9,111,],[7,7,-7,-10,]),'ALLWRITE':([2,5,6,8,9,10,111,],[-100,-100,12,-9,-7,-8,-10,]),'$end':([3,73,130,],[0,-1,-2,]),'OR':([91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,158,165,166,167,168,174,175,181,182,184,209,214,215,216,],[-92,-72,-90,-80,-82,-79,-83,-87,-91,-78,-84,-85,-93,-88,-77,-89,-86,-76,-73,-74,-75,196,-53,-81,-64,-30,-52,-49,-50,-51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([31,39,59,142,170,],[39,39,39,39,39,]),'program':([0,],[3,]),'bracketexp':([79,92,124,133,135,136,138,139,140,141,151,154,176,180,183,189,196,197,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'elseblock':([221,],[224,]),'pid':([79,92,124,133,135,136,138,139,140,141,151,154,176,180,183,189,196,197,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'module':([2,5,],[5,5,]),'owner':([84,],[115,]),'num':([79,92,124,133,135,136,138,139,140,141,151,154,176,180,183,189,196,197,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'cond':([124,151,176,180,189,196,197,],[152,174,198,202,206,207,208,]),'rvdecls':([33,50,],[51,67,]),'ardecls':([11,],[16,]),'event':([35,56,],[56,56,]),'rvdecl':([33,50,],[50,50,]),'bval':([79,92,124,133,135,136,138,139,140,141,151,154,176,180,183,189,196,197,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'stmts':([85,123,187,210,230,233,],[117,150,205,217,232,235,]),'locdecls':([16,],[21,]),'asgn':([85,123,187,210,223,230,233,],[118,118,118,118,118,118,118,]),'actuatordecls':([49,],[65,]),'init':([28,],[35,]),'Numdecl':([57,],[73,]),'awdecls':([6,],[11,]),'noargs':([135,136,],[159,159,]),'exit':([85,123,187,210,223,230,233,],[119,119,119,119,119,119,119,]),'neargs':([135,136,183,],[160,160,203,]),'type':([31,33,39,50,59,142,170,],[46,52,46,52,46,46,46,]),'events':([35,56,],[57,72,]),'empty':([2,5,6,11,16,21,28,31,33,39,49,50,59,65,135,136,142,170,221,],[8,8,13,17,23,27,36,48,53,48,66,53,48,83,161,161,48,48,226,]),'effblock':([212,],[219,]),'exp':([79,92,124,133,135,136,138,139,140,141,151,154,176,180,183,189,196,197,],[108,134,153,157,163,163,165,166,167,168,175,178,153,153,163,153,153,153,]),'funccall':([79,85,92,123,124,133,135,136,138,139,140,141,151,154,176,180,183,187,189,196,197,210,223,230,233,],[103,121,103,121,103,103,103,103,103,103,103,103,103,103,103,103,103,121,103,103,103,121,121,121,121,]),'modulefunccall':([79,85,92,123,124,133,135,136,138,139,140,141,151,154,176,180,183,187,189,196,197,210,223,230,233,],[104,122,104,122,104,104,104,104,104,104,104,104,104,104,104,104,104,122,104,104,104,122,122,122,122,]),'args':([135,136,],[162,164,]),'null':([79,92,124,133,135,136,138,139,140,141,151,154,176,180,183,189,196,197,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'stmt':([85,123,187,210,223,230,233,],[123,123,123,123,228,123,123,]),'agent':([0,],[2,]),'stagechange':([85,123,187,210,223,230,233,],[125,125,125,125,125,125,125,]),'stagelist':([58,88,],[76,131,]),'varname':([46,52,79,85,92,123,124,133,135,136,138,139,140,141,147,151,154,176,180,183,187,189,196,197,210,223,230,233,],[62,69,107,126,107,126,107,107,107,107,107,107,107,107,173,107,107,107,107,107,126,107,107,107,126,126,126,126,]),'modules':([2,5,],[6,10,]),'wptstmt':([85,123,187,210,223,230,233,],[127,127,127,127,127,127,127,]),'stagedecl':([21,],[28,]),'sensordecls':([65,],[81,]),'decls':([31,39,59,142,170,],[47,60,77,169,186,]),'op':([174,],[197,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> agent modules awdecls ardecls locdecls stagedecl init events Numdecl','program',9,'p_program','parser.py',14),
  ('Numdecl -> NUM INUM NL','Numdecl',3,'p_Numdecl','parser.py',17),
  ('stagedecl -> DEF STAGE LCURLY stagelist RCURLY NL','stagedecl',6,'p_stagedecl','parser.py',21),
  ('stagedecl -> empty','stagedecl',1,'p_stagedecl','parser.py',22),
  ('stagelist -> LID COMMA stagelist','stagelist',3,'p_stagelist','parser.py',30),
  ('stagelist -> LID','stagelist',1,'p_stagelist','parser.py',31),
  ('agent -> AGENT CID NL','agent',3,'p_agent','parser.py',39),
  ('modules -> module modules','modules',2,'p_modules','parser.py',44),
  ('modules -> empty','modules',1,'p_modules','parser.py',45),
  ('module -> USING MODULE CID COLON NL INDENT actuatordecls sensordecls DEDENT','module',9,'p_module','parser.py',54),
  ('actuatordecls -> ACTUATORS COLON NL INDENT decls DEDENT','actuatordecls',6,'p_actuatordecls','parser.py',59),
  ('actuatordecls -> empty','actuatordecls',1,'p_actuatordecls','parser.py',60),
  ('sensordecls -> SENSORS COLON NL INDENT decls DEDENT','sensordecls',6,'p_sensordecls','parser.py',68),
  ('sensordecls -> empty','sensordecls',1,'p_sensordecls','parser.py',69),
  ('awdecls -> ALLWRITE COLON NL INDENT decls DEDENT','awdecls',6,'p_awdecls','parser.py',77),
  ('awdecls -> empty','awdecls',1,'p_awdecls','parser.py',78),
  ('ardecls -> ALLREAD COLON NL INDENT rvdecls DEDENT','ardecls',6,'p_ardecls','parser.py',86),
  ('ardecls -> empty','ardecls',1,'p_ardecls','parser.py',87),
  ('locdecls -> LOCAL COLON NL INDENT decls DEDENT','locdecls',6,'p_locdecls','parser.py',95),
  ('locdecls -> empty','locdecls',1,'p_locdecls','parser.py',96),
  ('decls -> decl decls','decls',2,'p_decls','parser.py',104),
  ('decls -> empty','decls',1,'p_decls','parser.py',105),
  ('decl -> type varname ASGN exp NL','decl',5,'p_decl','parser.py',114),
  ('decl -> type varname NL','decl',3,'p_decl','parser.py',115),
  ('rvdecls -> rvdecl rvdecls','rvdecls',2,'p_rvdecls','parser.py',123),
  ('rvdecls -> empty','rvdecls',1,'p_rvdecls','parser.py',124),
  ('rvdecl -> type varname LBRACE owner RBRACE NL','rvdecl',6,'p_rvdecl','parser.py',134),
  ('owner -> TIMES','owner',1,'p_owner','parser.py',138),
  ('owner -> INUM','owner',1,'p_owner','parser.py',139),
  ('funccall -> varname LPAR args RPAR','funccall',4,'p_funccall','parser.py',143),
  ('args -> neargs','args',1,'p_args','parser.py',148),
  ('args -> noargs','args',1,'p_args','parser.py',149),
  ('noargs -> empty','noargs',1,'p_noargs','parser.py',154),
  ('neargs -> exp','neargs',1,'p_neargs','parser.py',158),
  ('neargs -> exp COMMA neargs','neargs',3,'p_neargs','parser.py',159),
  ('type -> INT','type',1,'p_type','parser.py',168),
  ('type -> STRING','type',1,'p_type','parser.py',169),
  ('type -> FLOAT','type',1,'p_type','parser.py',170),
  ('type -> IPOS','type',1,'p_type','parser.py',171),
  ('type -> BOOLEAN','type',1,'p_type','parser.py',172),
  ('type -> INPUTMAP','type',1,'p_type','parser.py',173),
  ('init -> INIT COLON NL INDENT stmts DEDENT','init',6,'p_init','parser.py',179),
  ('init -> empty','init',1,'p_init','parser.py',180),
  ('events -> event events','events',2,'p_events','parser.py',187),
  ('events -> event','events',1,'p_events','parser.py',188),
  ('event -> LID COLON NL INDENT PRE COLON cond NL effblock DEDENT','event',10,'p_event','parser.py',195),
  ('effblock -> EFF COLON NL INDENT stmts DEDENT','effblock',6,'p_effblock','parser.py',201),
  ('effblock -> EFF COLON stmt','effblock',3,'p_effblock','parser.py',202),
  ('cond -> LPAR cond AND cond RPAR','cond',5,'p_cond','parser.py',211),
  ('cond -> LPAR cond OR cond RPAR','cond',5,'p_cond','parser.py',212),
  ('cond -> LPAR cond op cond RPAR','cond',5,'p_cond','parser.py',213),
  ('cond -> LPAR NOT cond RPAR','cond',4,'p_cond','parser.py',214),
  ('cond -> exp','cond',1,'p_cond','parser.py',215),
  ('stmts -> stmt stmts','stmts',2,'p_stmts','parser.py',224),
  ('stmts -> stmt','stmts',1,'p_stmts','parser.py',225),
  ('stmt -> asgn','stmt',1,'p_stmt','parser.py',232),
  ('stmt -> wptstmt','stmt',1,'p_stmt','parser.py',233),
  ('stmt -> exit','stmt',1,'p_stmt','parser.py',234),
  ('stmt -> funccall NL','stmt',2,'p_stmt','parser.py',235),
  ('stmt -> modulefunccall NL','stmt',2,'p_stmt','parser.py',236),
  ('stmt -> ATOMIC COLON NL INDENT stmts DEDENT','stmt',6,'p_stmt','parser.py',237),
  ('stmt -> IF cond COLON NL INDENT stmts DEDENT elseblock','stmt',8,'p_stmt','parser.py',238),
  ('exit -> EXIT NL','exit',2,'p_exit','parser.py',252),
  ('modulefunccall -> CID LPAR args RPAR','modulefunccall',4,'p_modulefunccall','parser.py',255),
  ('elseblock -> ELSE COLON NL INDENT stmts DEDENT','elseblock',6,'p_elseblock','parser.py',259),
  ('elseblock -> empty','elseblock',1,'p_elseblock','parser.py',260),
  ('asgn -> varname ASGN exp NL','asgn',4,'p_asgn','parser.py',268),
  ('asgn -> stagechange','asgn',1,'p_asgn','parser.py',269),
  ('moduleflag -> CID','moduleflag',1,'p_moduleflag','symparser.py',269),
  ('stagechange -> STAGE ASGN varname NL','stagechange',4,'p_stagechange','parser.py',277),
  ('wptstmt -> varname ASGN GETINPUT LPAR RPAR NL','wptstmt',6,'p_wptstmt','parser.py',281),
  ('exp -> bracketexp','exp',1,'p_exp','parser.py',288),
  ('exp -> exp PLUS exp','exp',3,'p_exp','parser.py',289),
  ('exp -> exp TIMES exp','exp',3,'p_exp','parser.py',290),
  ('exp -> exp MINUS exp','exp',3,'p_exp','parser.py',291),
  ('exp -> exp BY exp','exp',3,'p_exp','parser.py',292),
  ('exp -> varname','exp',1,'p_exp','parser.py',293),
  ('exp -> STAGE','exp',1,'p_exp','parser.py',294),
  ('exp -> bval','exp',1,'p_exp','parser.py',295),
  ('exp -> pid','exp',1,'p_exp','parser.py',296),
  ('exp -> LID LBRACE exp RBRACE','exp',4,'p_exp','parser.py',297),
  ('exp -> num','exp',1,'p_exp','parser.py',298),
  ('exp -> null','exp',1,'p_exp','parser.py',299),
  ('exp -> funccall','exp',1,'p_exp','parser.py',300),
  ('exp -> modulefunccall','exp',1,'p_exp','parser.py',301),
  ('bracketexp -> LPAR exp RPAR','bracketexp',3,'p_bracketexp','parser.py',311),
  ('bval -> TRUE','bval',1,'p_bval','parser.py',315),
  ('bval -> FALSE','bval',1,'p_bval','parser.py',316),
  ('num -> INUM','num',1,'p_num','parser.py',321),
  ('num -> FNUM','num',1,'p_num','parser.py',322),
  ('pid -> PID','pid',1,'p_pid','parser.py',327),
  ('varname -> LID','varname',1,'p_varname','parser.py',332),
  ('null -> NULL','null',1,'p_null','parser.py',337),
  ('op -> EQ','op',1,'p_op','parser.py',342),
  ('op -> NEQ','op',1,'p_op','parser.py',343),
  ('op -> GEQ','op',1,'p_op','parser.py',344),
  ('op -> LEQ','op',1,'p_op','parser.py',345),
  ('op -> GT','op',1,'p_op','parser.py',346),
  ('op -> LT','op',1,'p_op','parser.py',347),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',352),
]
